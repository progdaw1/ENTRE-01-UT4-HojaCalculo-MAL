#BlueJ class context
comment0.target=HojaCalculo
comment0.text=\r\n\ \ Un\ objeto\ de\ esta\ clase\ representa\ a\ una\ sencilla\r\n\ \ hoja\ de\ c\u00E1lculo.\ La\ hoja\ tiene\ hasta\ un\ m\u00E1ximo\ de\ 3\ filas\ (no\ m\u00E1s)\r\n\ \ En\ cada\ fila\ la\ empresa\ "apunta"\ los\ ingresos\ y\ gastos\ en\ \r\n\ \ una\ determinada\ fecha\r\n\ \r\n\ @author\ -\ \ \ \r\n\ \ \r\n
comment1.params=nombre
comment1.target=HojaCalculo(java.lang.String)
comment1.text=\r\n\ Constructor\ \ \r\n\ Crea\ la\ hoja\ de\ c\u00E1lculo\ con\ el\ nombre\ indicado\ \r\n\ e\ inicializa\ las\ filas\ al\ valor\ null\ (inicialmente\r\n\ la\ hoja\ se\ crea\ sin\ filas)\r\n
comment10.params=
comment10.target=double\ getTotalIngresos()
comment10.text=\r\n\ Calcula\ y\ devuelve\ el\ total\ de\ ingresos\ entre\r\n\ todas\ las\ filas\ que\ incluye\ la\ hoja\r\n
comment11.params=
comment11.target=double\ getTotalGastos()
comment11.text=\r\n\ Calcula\ y\ devuelve\ el\ total\ de\ gastos\r\n\ entre\ todas\ las\ filas\ que\ incluye\ la\ hoja\r\n
comment12.params=
comment12.target=double\ getBeneficio()
comment12.text=\r\n\ Calcula\ y\ devuelve\ el\ total\ del\ beneficio\r\n\ entre\ todas\ las\ filas\ que\ incluye\ la\ hoja\r\n
comment13.params=
comment13.target=java.lang.String\ toString()
comment13.text=\r\n\ Representaci\u00F3n\ textual\ de\ la\ hoja\r\n\ con\ el\ formato\ exacto\ que\ indica\ el\ enunciado\r\n
comment14.params=
comment14.target=HojaCalculo\ duplicarHoja()
comment14.text=\r\n\ Devuelve\ un\ duplicado\ de\ la\ hoja\ actual.\r\n\ El\ nombre\ de\ la\ hoja\ duplicada\ ser\u00E1\ "Duplicada\ HojaX"\r\n\ Al\ duplicar\ la\ hoja\ se\ duplicar\u00E1n\ tambi\u00E9n\ las\ filas\ que\ contenga\r\n
comment2.params=
comment2.target=java.lang.String\ getNombre()
comment2.text=\r\n\ accesor\ para\ el\ nombre\ de\ la\ hoja\r\n
comment3.params=
comment3.target=Fila\ getFila1()
comment3.text=\r\n\ accesor\ para\ la\ fila1\r\n
comment4.params=
comment4.target=Fila\ getFila2()
comment4.text=\r\n\ accesor\ para\ la\ fila2\r\n
comment5.params=
comment5.target=Fila\ getFila3()
comment5.text=\r\n\ accesor\ para\ la\ fila3\r\n
comment6.params=
comment6.target=int\ getNumeroFilas()
comment6.text=\r\n\ Devuelve\ el\ n\u00BA\ de\ filas\ de\ la\ hoja\r\n\ (depender\u00E1\ de\ cu\u00E1ntas\ filas\ est\u00E9n\ a\ null)\r\n
comment7.params=
comment7.target=boolean\ hojaCompleta()
comment7.text=\r\n\ Devuelve\ true\ si\ la\ hoja\ est\u00E1\ completa\r\n\ (tiene\ exactamente\ 3\ filas)\r\n
comment8.params=fila
comment8.target=void\ addFila(Fila)
comment8.text=\r\n\ Se\ a\u00F1ade\ una\ nueva\ fila\ a\ la\ hoja\r\n\ Si\ la\ hoja\ est\u00E1\ completa\ se\ muestra\ el\ mensaje\ "FilaX\ no\ se\ puede\ a\u00F1adir\ en\ HOJAX"\r\n\ Si\ no\ est\u00E1\ completa\ se\ a\u00F1ade\ la\ fila\ a\ la\ hoja\ teniendo\ en\ cuenta\r\n\ si\ se\ a\u00F1ade\ como\ primera,\ segunda\ o\ tercera\ fila\ (no\ han\ de\ quedar\ huecos)\r\n
comment9.params=id\ fecha\ ingresos\ gastos
comment9.target=void\ addFila(java.lang.String,\ Fecha,\ double,\ double)
comment9.text=\r\n\ Dada\ la\ informaci\u00F3n\ a\ guardar\ en\ una\ fila\ el\ m\u00E9todo\r\n\ crea\ la\ fila\ y\ la\ a\u00F1ade\ a\ la\ hoja\r\n\ (evita\ repetir\ c\u00F3digo)\r\n
numComments=15
